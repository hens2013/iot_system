services:
  ingestion_service:
    build:
      context: .
      dockerfile: ingestion_service/Dockerfile
    container_name: ingestion_service
    ports:
      - "5000:5000"
    env_file:
      - .env
    depends_on:
      - rabbitmq
      - postgres
      - redis
    networks:
      - app_network
    environment:
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/"
      RABBITMQ_QUEUE: "alerts_queue"
      DATABASE_URL: "postgresql://postgres:123456@postgres:5432/iot_system"
      REDIS_URL: "redis://redis:6379/"
      PYTHONPATH: "ingestion_service/app"

  alert_service:
    build:
      context: .
      dockerfile: alerting_service/Dockerfile
    container_name: alert_service
    env_file:
      - .env
    ports:
      - "8000:8000"
    environment:
      RABBITMQ_URL: "amqp://guest:guest@rabbitmq:5672/"
      RABBITMQ_QUEUE: "alerts_queue"
      DATABASE_URL: "postgresql://postgres:123456@postgres:5432/iot_system"
      REDIS_URL: "redis://redis:6379/"
      PYTHONPATH: "alert_service/app"
    depends_on:
      - rabbitmq
      - redis
      - postgres
    networks:
      - app_network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - app_network
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      DATABASE_URL: postgresql://hen:123456@postgres:5432/iot_system
    restart: always
    networks:
      - app_network

  postgres:
    image: postgres:14
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: iot_system
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
